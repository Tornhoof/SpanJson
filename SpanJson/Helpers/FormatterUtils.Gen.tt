<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
var types = new[]
{
    typeof(sbyte),
    typeof(Int16),
    typeof(Int32),
    typeof(Int64),
    typeof(byte),
    typeof(UInt16),
    typeof(UInt32),
    typeof(UInt64),
    typeof(Single),
    typeof(Double),
    typeof(bool),
    typeof(char),
};
#>
// Autogenerated
// ReSharper disable BuiltInTypeReferenceStyle
using System;
using System.Buffers;
namespace SpanJson.Helpers
{
    public static partial class FormatterUtils
    {
<# foreach(var t in types) { #>
        public static void GrowArray(ref <#=t.Name#>[] array)
        {
            var backup = array;
            array = ArrayPool<<#=t.Name#>>.Shared.Rent(backup.Length * 2);
            Buffer.BlockCopy(backup, 0, array, 0, backup.Length * sizeof(<#=t.Name#>));
            ArrayPool<<#=t.Name#>>.Shared.Return(backup);
        }

        public static <#=t.Name#>[] CopyArray(<#=t.Name#>[] array, int count)
        {
            var result = new <#=t.Name#>[count];
            Buffer.BlockCopy(array, 0, result, 0, count * sizeof(<#=t.Name#>));
            return result;
        }

<# } #>
    }
}