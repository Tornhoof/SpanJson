<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
  var types = new[]
  {
      typeof(sbyte),
      typeof(short),
      typeof(int),
      typeof(long),
      typeof(byte),
      typeof(ushort),
      typeof(uint),
      typeof(ulong),
      typeof(float),
      typeof(double),
      typeof(decimal)
  };
#>
using System;
// Autogenerated
// ReSharper disable BuiltInTypeReferenceStyle
namespace SpanJson.Formatters.Dynamic
{
    public partial class SpanJsonDynamicNumber<TSymbol> : SpanJsonDynamic<TSymbol> where TSymbol : struct
    {
<# foreach(var t in types) { #>
        public static explicit operator <#= t.Name #>(SpanJsonDynamicNumber<TSymbol> input)
        {
            if (DynamicConverter.TryConvertTo(typeof(<#= t.Name #>), input.Symbols, out var value))
            {
                return (<#= t.Name #>) value;
            }
            throw new InvalidCastException();
        }
<# } #>
    }
}