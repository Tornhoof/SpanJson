using System;
namespace SpanJson.Tests
{
	// Autogenerated
	// ReSharper disable BuiltInTypeReferenceStyle
    // ReSharper disable InconsistentNaming
	public partial class JsonWriterPropertyNameLengthTests
	{
		public class PropertyNameLengths : IEquatable<PropertyNameLengths>
		{
		    public int a {get;set;}

		    public int ab {get;set;}

		    public int abc {get;set;}

		    public int abcd {get;set;}

		    public int abcde {get;set;}

		    public int abcdef {get;set;}

		    public int abcdefg {get;set;}

		    public int abcdefgh {get;set;}

		    public int abcdefghi {get;set;}

		    public int abcdefghij {get;set;}

		    public int abcdefghijk {get;set;}

		    public int abcdefghijkl {get;set;}

		    public int abcdefghijklm {get;set;}

		    public int abcdefghijklmn {get;set;}

		    public int abcdefghijklmno {get;set;}

		    public int abcdefghijklmnop {get;set;}

		    public int abcdefghijklmnopq {get;set;}

		    public int abcdefghijklmnopqr {get;set;}

		    public int abcdefghijklmnopqrs {get;set;}

		    public int abcdefghijklmnopqrst {get;set;}

		    public int abcdefghijklmnopqrstu {get;set;}

		    public int abcdefghijklmnopqrstuv {get;set;}

		    public int abcdefghijklmnopqrstuvw {get;set;}

		    public int abcdefghijklmnopqrstuvwx {get;set;}

		    public int abcdefghijklmnopqrstuvwxy {get;set;}

		    public int abcdefghijklmnopqrstuvwxyz {get;set;}

		    public int abcdefghijklmnopqrstuvwxyza {get;set;}

		    public int abcdefghijklmnopqrstuvwxyzab {get;set;}

		    public int abcdefghijklmnopqrstuvwxyzabc {get;set;}

		    public int abcdefghijklmnopqrstuvwxyzabcd {get;set;}

		    public int abcdefghijklmnopqrstuvwxyzabcde {get;set;}

		    public int abcdefghijklmnopqrstuvwxyzabcdef {get;set;}

		    public int abcdefghijklmnopqrstuvwxyzabcdefg {get;set;}

		    public int abcdefghijklmnopqrstuvwxyzabcdefgh {get;set;}

			public override bool Equals(object obj)
			{
				if (ReferenceEquals(null, obj)) return false;
				if (ReferenceEquals(this, obj)) return true;
				if (obj.GetType() != this.GetType()) return false;
				return Equals((PropertyNameLengths) obj);
			}
			public override int GetHashCode()
		    {
				return 0; // performance is not relevant here
			}
		    public bool Equals(PropertyNameLengths other)
		    {
				if(a != other.a)
				{
					return false;
				}

				if(ab != other.ab)
				{
					return false;
				}

				if(abc != other.abc)
				{
					return false;
				}

				if(abcd != other.abcd)
				{
					return false;
				}

				if(abcde != other.abcde)
				{
					return false;
				}

				if(abcdef != other.abcdef)
				{
					return false;
				}

				if(abcdefg != other.abcdefg)
				{
					return false;
				}

				if(abcdefgh != other.abcdefgh)
				{
					return false;
				}

				if(abcdefghi != other.abcdefghi)
				{
					return false;
				}

				if(abcdefghij != other.abcdefghij)
				{
					return false;
				}

				if(abcdefghijk != other.abcdefghijk)
				{
					return false;
				}

				if(abcdefghijkl != other.abcdefghijkl)
				{
					return false;
				}

				if(abcdefghijklm != other.abcdefghijklm)
				{
					return false;
				}

				if(abcdefghijklmn != other.abcdefghijklmn)
				{
					return false;
				}

				if(abcdefghijklmno != other.abcdefghijklmno)
				{
					return false;
				}

				if(abcdefghijklmnop != other.abcdefghijklmnop)
				{
					return false;
				}

				if(abcdefghijklmnopq != other.abcdefghijklmnopq)
				{
					return false;
				}

				if(abcdefghijklmnopqr != other.abcdefghijklmnopqr)
				{
					return false;
				}

				if(abcdefghijklmnopqrs != other.abcdefghijklmnopqrs)
				{
					return false;
				}

				if(abcdefghijklmnopqrst != other.abcdefghijklmnopqrst)
				{
					return false;
				}

				if(abcdefghijklmnopqrstu != other.abcdefghijklmnopqrstu)
				{
					return false;
				}

				if(abcdefghijklmnopqrstuv != other.abcdefghijklmnopqrstuv)
				{
					return false;
				}

				if(abcdefghijklmnopqrstuvw != other.abcdefghijklmnopqrstuvw)
				{
					return false;
				}

				if(abcdefghijklmnopqrstuvwx != other.abcdefghijklmnopqrstuvwx)
				{
					return false;
				}

				if(abcdefghijklmnopqrstuvwxy != other.abcdefghijklmnopqrstuvwxy)
				{
					return false;
				}

				if(abcdefghijklmnopqrstuvwxyz != other.abcdefghijklmnopqrstuvwxyz)
				{
					return false;
				}

				if(abcdefghijklmnopqrstuvwxyza != other.abcdefghijklmnopqrstuvwxyza)
				{
					return false;
				}

				if(abcdefghijklmnopqrstuvwxyzab != other.abcdefghijklmnopqrstuvwxyzab)
				{
					return false;
				}

				if(abcdefghijklmnopqrstuvwxyzabc != other.abcdefghijklmnopqrstuvwxyzabc)
				{
					return false;
				}

				if(abcdefghijklmnopqrstuvwxyzabcd != other.abcdefghijklmnopqrstuvwxyzabcd)
				{
					return false;
				}

				if(abcdefghijklmnopqrstuvwxyzabcde != other.abcdefghijklmnopqrstuvwxyzabcde)
				{
					return false;
				}

				if(abcdefghijklmnopqrstuvwxyzabcdef != other.abcdefghijklmnopqrstuvwxyzabcdef)
				{
					return false;
				}

				if(abcdefghijklmnopqrstuvwxyzabcdefg != other.abcdefghijklmnopqrstuvwxyzabcdefg)
				{
					return false;
				}

				if(abcdefghijklmnopqrstuvwxyzabcdefgh != other.abcdefghijklmnopqrstuvwxyzabcdefgh)
				{
					return false;
				}

				return true;
			}
		}
	}
}